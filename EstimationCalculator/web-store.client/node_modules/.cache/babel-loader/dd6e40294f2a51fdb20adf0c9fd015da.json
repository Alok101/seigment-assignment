{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\siemens-app-estimation\\\\EstimationCalculator\\\\web-store.client\\\\src\\\\components\\\\PriceCalculator\\\\Estimation.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getCustomerDetails } from \"../../common/token.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Estimation = () => {\n  _s();\n\n  const customerDetails = getCustomerDetails();\n  const discountItem = customerDetails.discountRule;\n  const apiModel = {\n    customerId: '',\n    customerType: '',\n    discountPercentage: '',\n    itemDetails: {\n      price: '',\n      weight: '',\n      totalPrice: ''\n    },\n    totalAmountAfterDiscount: ''\n  };\n  const [estimattedItem, setEstimattedItem] = useState(apiModel);\n\n  const handlePriceInput = event => {\n    setEstimattedItem(prev => ({\n      itemDetails: { ...prev.itemDetails,\n        price: event.target.value,\n        totalPrice: event.target.value * estimattedItem.weight\n      }\n    }));\n  };\n\n  const handleWeightInput = event => {\n    setEstimattedItem(prev => ({\n      itemDetails: { ...prev.itemDetails,\n        weight: event.target.value,\n        totalPrice: event.target.value * estimattedItem.weight\n      }\n    }));\n  };\n\n  const handleOperation = actionType => {\n    alert(`actionType ${calculateDiscountPrice()}`);\n\n    switch (actionType) {\n      case 'printtoscreen':\n        break;\n\n      case 'printtofile':\n        break;\n\n      case 'printtopaper':\n        break;\n\n      case 'calculatetotalamount':\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const calculateDiscountPrice = () => {\n    let totalPrice = calculateTotalPrice();\n    let discountPrice = totalPrice - totalPrice * discountItem.pricePercentage / 100;\n    return discountPrice;\n  };\n\n  const calculateTotalPrice = () => {\n    let totalprice = estimattedItem.itemDetails.price * estimattedItem.itemDetails.weight;\n    return totalprice;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Welcome \", customerDetails.type, \" User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Gold Price (per gram)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: estimattedItem.apiModel.itemDetails.price,\n          onChange: handlePriceInput,\n          placeholder: \"Enter Price\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Weight (grams)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: estimattedItem.apiModel.itemDetails.weight,\n          onChange: handleWeightInput,\n          placeholder: \"Enter Weight\",\n          name: \"weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          readOnly: true,\n          value: estimattedItem.apiModel.itemDetails.totalPrice,\n          type: \"number\",\n          name: \"totalPrice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), customerDetails && customerDetails.discountRule.itemVisible ? /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Discount %\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"pricePercentage\",\n          readOnly: customerDetails.discountRule.applicable,\n          value: customerDetails.discountRule.pricePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"calculatetoamount\"),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtoscreen\"),\n        children: \"Print to Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtofile\"),\n        children: \"Print to File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtopaper\"),\n        children: \"Print to Paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Estimation, \"/jXeGXO/j0YXgNva5ll3FCdNalI=\");\n\n_c = Estimation;\nexport default Estimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estimation\");","map":{"version":3,"sources":["E:/Programming/siemens-app-estimation/EstimationCalculator/web-store.client/src/components/PriceCalculator/Estimation.js"],"names":["useState","getCustomerDetails","Estimation","customerDetails","discountItem","discountRule","apiModel","customerId","customerType","discountPercentage","itemDetails","price","weight","totalPrice","totalAmountAfterDiscount","estimattedItem","setEstimattedItem","handlePriceInput","event","prev","target","value","handleWeightInput","handleOperation","actionType","alert","calculateDiscountPrice","calculateTotalPrice","discountPrice","pricePercentage","totalprice","type","itemVisible","applicable"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { getCustomerDetails } from \"../../common/token.js\";\r\n\r\n  const Estimation = () => {\r\n  const customerDetails = getCustomerDetails();\r\n  const discountItem=customerDetails.discountRule;\r\n  const apiModel={\r\n    customerId:'',\r\n    customerType:'',\r\n    discountPercentage:'',\r\n    itemDetails:{\r\n        price: '',\r\n        weight: '',\r\n        totalPrice: '',\r\n    },\r\n    totalAmountAfterDiscount:''\r\n  };\r\n\r\n  const [estimattedItem, setEstimattedItem] = useState(apiModel);\r\n\r\n  const handlePriceInput = (event) => {\r\n    setEstimattedItem((prev) => ({\r\n        itemDetails:{\r\n            ...prev.itemDetails,\r\n            price: event.target.value,\r\n            totalPrice:event.target.value * estimattedItem.weight\r\n        }\r\n    }));\r\n  };\r\n\r\n  const handleWeightInput = (event) => {\r\n  setEstimattedItem((prev) => ({\r\n    itemDetails:{\r\n        ...prev.itemDetails,\r\n        weight: event.target.value,\r\n        totalPrice:event.target.value * estimattedItem.weight\r\n    }\r\n}));\r\n};\r\n\r\n  const handleOperation = (actionType) => {\r\n    alert(`actionType ${calculateDiscountPrice()}`);\r\n    switch(actionType){\r\n        case 'printtoscreen':\r\n            break;\r\n            case 'printtofile':\r\n\r\n                break;\r\n                case 'printtopaper':\r\n                    break;\r\n                    case 'calculatetotalamount':\r\n                        break;\r\n                        default:\r\n                            break;\r\n    }\r\n  };\r\n \r\n  const calculateDiscountPrice=()=>{\r\n      let totalPrice=calculateTotalPrice();\r\n      let discountPrice=totalPrice-((totalPrice*discountItem.pricePercentage)/100);\r\n      return  discountPrice; \r\n  }\r\n\r\n  const calculateTotalPrice=()=>{\r\n    let totalprice=estimattedItem.itemDetails.price * estimattedItem.itemDetails.weight;\r\n    return totalprice;\r\n  }\r\n  return (\r\n    <div>\r\n      <label>Welcome {customerDetails.type} User</label>\r\n      <form>\r\n      <lable>\r\n        <p>Gold Price (per gram)</p>\r\n        <input\r\n          type=\"text\"\r\n          value={estimattedItem.apiModel.itemDetails.price}\r\n          onChange={handlePriceInput}\r\n          placeholder=\"Enter Price\"\r\n          name=\"price\"\r\n        />\r\n      </lable>\r\n\r\n      <lable>\r\n        <p>Weight (grams)</p>\r\n        <input\r\n          type=\"text\"\r\n          value={estimattedItem.apiModel.itemDetails.weight}\r\n          onChange={handleWeightInput}\r\n          placeholder=\"Enter Weight\"\r\n          name=\"weight\"\r\n        />\r\n      </lable>\r\n      <lable>\r\n        <p>Total Price</p>\r\n        <input\r\n          readOnly={true}\r\n          value={estimattedItem.apiModel.itemDetails.totalPrice}\r\n          type=\"number\"\r\n          name=\"totalPrice\"\r\n        />\r\n      </lable>\r\n      {customerDetails && customerDetails.discountRule.itemVisible ? (\r\n        <lable>\r\n          <p>Discount %</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"pricePercentage\"\r\n            readOnly={customerDetails.discountRule.applicable}\r\n            value={customerDetails.discountRule.pricePercentage}\r\n          />\r\n        </lable>\r\n      ) : null}</form>\r\n      <label>\r\n        <button type=\"button\" onClick={() => handleOperation(\"calculatetoamount\")}>\r\n          Calculate\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleOperation(\"printtoscreen\")}>\r\n          Print to Screen\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleOperation(\"printtofile\")}>\r\n          Print to File\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleOperation(\"printtopaper\")}>\r\n          Print to Paper\r\n        </button>\r\n        <button type=\"button\">Close</button>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport default Estimation;\r\n"]},"metadata":{},"sourceType":"module"}