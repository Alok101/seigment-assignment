{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\siemens-app-estimation\\\\EstimationCalculator\\\\web-store.client\\\\src\\\\components\\\\PriceCalculator\\\\Estimation.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getCustomerDetails } from \"../../common/token.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Estimation = () => {\n  _s();\n\n  const customerDetails = getCustomerDetails();\n  const [estimattedItem, setEstimattedItem] = useState({\n    price: \"\",\n    weight: \"\",\n    totalPrice: \"\"\n  });\n\n  const handleInput = event => {\n    debugger;\n\n    if (event.target.name === \"totalPrice\") {\n      let totalPrice = estimattedItem.price * estimattedItem.weight;\n      event.target.value = totalPrice && totalPrice === undefined ? \"\" : totalPrice;\n    }\n\n    setEstimattedItem(prev => ({ ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOperation = actionType => {\n    alert(actionType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Welcome \", customerDetails.type, \" User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Gold Price (per gram)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: estimattedItem.price,\n        onClick: handleInput,\n        placeholder: \"Enter Price\",\n        name: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Weight (grams)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: estimattedItem.weight,\n        onClick: handleInput,\n        placeholder: \"Enter Weight\",\n        name: \"weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        value: estimattedItem.totalPrice,\n        type: \"number\",\n        name: \"totalPrice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), customerDetails && customerDetails.discountRule.itemVisible ? /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pricePercentage\",\n        readOnly: customerDetails.discountRule.applicable,\n        value: customerDetails.discountRule.pricePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"calculate\"),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtoscreen\"),\n        children: \"Print to Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtofile\"),\n        children: \"Print to File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtopaper\"),\n        children: \"Print to Paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Estimation, \"yeABnpyvnWguDO2oeKblHa0hPPQ=\");\n\n_c = Estimation;\nexport default Estimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estimation\");","map":{"version":3,"sources":["E:/Programming/siemens-app-estimation/EstimationCalculator/web-store.client/src/components/PriceCalculator/Estimation.js"],"names":["useState","getCustomerDetails","Estimation","customerDetails","estimattedItem","setEstimattedItem","price","weight","totalPrice","handleInput","event","target","name","value","undefined","prev","handleOperation","actionType","alert","type","discountRule","itemVisible","applicable","pricePercentage"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,eAAe,GAAGF,kBAAkB,EAA1C;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC;AACnDM,IAAAA,KAAK,EAAE,EAD4C;AAEnDC,IAAAA,MAAM,EAAE,EAF2C;AAGnDC,IAAAA,UAAU,EAAE;AAHuC,GAAD,CAApD;;AAMA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B;;AACF,QAAIA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,YAA1B,EAAwC;AACtC,UAAIJ,UAAU,GAAGJ,cAAc,CAACE,KAAf,GAAuBF,cAAc,CAACG,MAAvD;AACAG,MAAAA,KAAK,CAACC,MAAN,CAAaE,KAAb,GACEL,UAAU,IAAIA,UAAU,KAAKM,SAA7B,GAAyC,EAAzC,GAA8CN,UADhD;AAED;;AACDH,IAAAA,iBAAiB,CAAEU,IAAD,KAAW,EAC3B,GAAGA,IADwB;AAE3B,OAACL,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAFP,KAAX,CAAD,CAAjB;AAID,GAXD;;AAYA,QAAMG,eAAe,GAAIC,UAAD,IAAgB;AACtCC,IAAAA,KAAK,CAACD,UAAD,CAAL;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA,6BAAgBd,eAAe,CAACgB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAEf,cAAc,CAACE,KAFxB;AAGE,QAAA,OAAO,EAAEG,WAHX;AAIE,QAAA,WAAW,EAAC,aAJd;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAEL,cAAc,CAACG,MAFxB;AAGE,QAAA,OAAO,EAAEE,WAHX;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAuBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,QAAQ,EAAE,IADZ;AAEE,QAAA,KAAK,EAAEL,cAAc,CAACI,UAFxB;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,EAgCGL,eAAe,IAAIA,eAAe,CAACiB,YAAhB,CAA6BC,WAAhD,gBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,QAAQ,EAAElB,eAAe,CAACiB,YAAhB,CAA6BE,UAHzC;AAIE,QAAA,KAAK,EAAEnB,eAAe,CAACiB,YAAhB,CAA6BG;AAJtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAUG,IA1CN,eA2CE;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMP,eAAe,CAAC,WAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMA,eAAe,CAAC,eAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMA,eAAe,CAAC,aAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMA,eAAe,CAAC,cAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CApFD;;GAAMd,U;;KAAAA,U;AAqFN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { getCustomerDetails } from \"../../common/token.js\";\r\nconst Estimation = () => {\r\n  const customerDetails = getCustomerDetails();\r\n  const [estimattedItem, setEstimattedItem] = useState({\r\n    price: \"\",\r\n    weight: \"\",\r\n    totalPrice: \"\",\r\n  });\r\n\r\n  const handleInput = (event) => {\r\n      debugger;\r\n    if (event.target.name === \"totalPrice\") {\r\n      let totalPrice = estimattedItem.price * estimattedItem.weight;\r\n      event.target.value =\r\n        totalPrice && totalPrice === undefined ? \"\" : totalPrice;\r\n    }\r\n    setEstimattedItem((prev) => ({\r\n      ...prev,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n  const handleOperation = (actionType) => {\r\n    alert(actionType);\r\n  };\r\n  return (\r\n    <div>\r\n      <label>Welcome {customerDetails.type} User</label>\r\n      <lable>\r\n        <p>Gold Price (per gram)</p>\r\n        <input\r\n          type=\"number\"\r\n          value={estimattedItem.price}\r\n          onClick={handleInput}\r\n          placeholder=\"Enter Price\"\r\n          name=\"price\"\r\n        />\r\n      </lable>\r\n\r\n      <lable>\r\n        <p>Weight (grams)</p>\r\n        <input\r\n          type=\"number\"\r\n          value={estimattedItem.weight}\r\n          onClick={handleInput}\r\n          placeholder=\"Enter Weight\"\r\n          name=\"weight\"\r\n        />\r\n      </lable>\r\n      <lable>\r\n        <p>Total Price</p>\r\n        <input\r\n          readOnly={true}\r\n          value={estimattedItem.totalPrice}\r\n          type=\"number\"\r\n          name=\"totalPrice\"\r\n        />\r\n      </lable>\r\n      {customerDetails && customerDetails.discountRule.itemVisible ? (\r\n        <lable>\r\n          <p>Discount %</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"pricePercentage\"\r\n            readOnly={customerDetails.discountRule.applicable}\r\n            value={customerDetails.discountRule.pricePercentage}\r\n          />\r\n        </lable>\r\n      ) : null}\r\n      <label>\r\n        <button type=\"button\" onClick={() => handleOperation(\"calculate\")}>\r\n          Calculate\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleOperation(\"printtoscreen\")}>\r\n          Print to Screen\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleOperation(\"printtofile\")}>\r\n          Print to File\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleOperation(\"printtopaper\")}>\r\n          Print to Paper\r\n        </button>\r\n        <button type=\"button\">Close</button>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport default Estimation;\r\n"]},"metadata":{},"sourceType":"module"}