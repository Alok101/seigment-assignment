{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\siemens-app-estimation\\\\EstimationCalculator\\\\web-store.client\\\\src\\\\components\\\\PriceCalculator\\\\Estimation.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { getCustomerDetails } from \"../../common/token.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Estimation = () => {\n  _s();\n\n  const customerDetails = getCustomerDetails();\n  const [estimattedItem, setEstimattedItem] = useState({\n    price: '',\n    weight: '',\n    totalPrice: ''\n  });\n\n  const handleInput = event => {\n    if (event.target.name === 'totalPrice') {\n      let totalPrice = estimattedItem.price * estimattedItem.weight;\n      event.target.value = totalPrice && totalPrice === undefined ? '' : totalPrice;\n    }\n\n    setEstimattedItem(prev => ({ ...prev,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOperation = actionType => {\n    alert(actionType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Welcome \", customerDetails.type, \" User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Gold Price (per gram)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: estimattedItem.price,\n        onClick: handleInput,\n        placeholder: \"Enter Price\",\n        name: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Weight (grams)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: estimattedItem.weight,\n        onClick: handleInput,\n        placeholder: \"Enter Weight\",\n        name: \"weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        value: estimattedItem.totalPrice,\n        type: \"number\",\n        name: \"totalPrice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), customerDetails && customerDetails.discountRule.itemVisible ? /*#__PURE__*/_jsxDEV(\"lable\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pricePercentage\",\n        readOnly: customerDetails.discountRule.applicable,\n        value: customerDetails.discountRule.pricePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"calculate\"),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtoscreen\"),\n        children: \"Print to Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtofile\"),\n        children: \"Print to File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleOperation(\"printtopaper\"),\n        children: \"Print to Paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Estimation, \"V7hf1Dd1n75/XA69LqxJUiuxPVs=\");\n\n_c = Estimation;\nexport default Estimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Estimation\");","map":{"version":3,"sources":["E:/Programming/siemens-app-estimation/EstimationCalculator/web-store.client/src/components/PriceCalculator/Estimation.js"],"names":["useState","getCustomerDetails","Estimation","customerDetails","estimattedItem","setEstimattedItem","price","weight","totalPrice","handleInput","event","target","name","value","undefined","prev","handleOperation","actionType","alert","type","discountRule","itemVisible","applicable","pricePercentage"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport { getCustomerDetails } from \"../../common/token.js\";\r\nconst Estimation = () => {\r\n  const customerDetails = getCustomerDetails();\r\n  const[estimattedItem,setEstimattedItem]=useState(\r\n      {\r\n             price:'',\r\n             weight:'',\r\n             totalPrice:'',\r\n    });\r\n    const handleInput=(event)=>{\r\nif(event.target.name==='totalPrice'){\r\n    let totalPrice=estimattedItem.price*estimattedItem.weight;\r\n    event.target.value=totalPrice && totalPrice===undefined?'':totalPrice;\r\n}\r\nsetEstimattedItem((prev)=>({\r\n...prev,\r\n[event.target.name]: event.target.value\r\n}));\r\n    }\r\nconst handleOperation=(actionType)=>{\r\n    \r\nalert(actionType);\r\n}  \r\n  return (\r\n    <div>\r\n      <label>Welcome {customerDetails.type} User</label>\r\n      <lable>\r\n        <p>Gold Price (per gram)</p>\r\n        <input type=\"number\" value={estimattedItem.price} onClick={handleInput} placeholder=\"Enter Price\" name=\"price\" />\r\n      </lable>\r\n\r\n      <lable>\r\n        <p>Weight (grams)</p>\r\n        <input type=\"number\" value={estimattedItem.weight} onClick={handleInput} placeholder=\"Enter Weight\" name=\"weight\" />\r\n      </lable>\r\n      <lable>\r\n        <p>Total Price</p>\r\n        <input readOnly={true} value={estimattedItem.totalPrice} type=\"number\" name=\"totalPrice\" />\r\n      </lable>\r\n      {customerDetails && customerDetails.discountRule.itemVisible ? (\r\n        <lable>\r\n          <p>Discount %</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"pricePercentage\"\r\n            readOnly={customerDetails.discountRule.applicable}\r\n            value={customerDetails.discountRule.pricePercentage}\r\n          />\r\n        </lable>\r\n      ) : null}\r\n      <label>\r\n          <button type=\"button\" onClick={()=>handleOperation(\"calculate\")}>Calculate</button>\r\n          <button type=\"button\" onClick={()=>handleOperation(\"printtoscreen\")}>Print to Screen</button>\r\n          <button type=\"button\" onClick={()=>handleOperation(\"printtofile\")}>Print to File</button>\r\n          <button type=\"button\" onClick={()=>handleOperation(\"printtopaper\")}>Print to Paper</button>\r\n          <button type=\"button\">Close</button>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport default Estimation;\r\n"]},"metadata":{},"sourceType":"module"}